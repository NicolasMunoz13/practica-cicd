version: 2.1

orbs:
  sonarcloud: sonarsource/sonarcloud@2.0.0

jobs:
  build:
    working_directory: ~/repo
    docker: 
      - image: cimg/python:3.10.1
    steps:
      - checkout

      - restore_cache:
          keys:
          - deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run: 
          name: Print working directory
          command: pwd
      - run:
          name: list file
          command: ls
      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python3 -m pip install --upgrade pip
            pip3 install Flask
            pip3 install coverage
            pip3 install pylint
            pip3 install build
            pip3 install --upgrade twine
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            python3 test.py
      - run:
          name: Create report
          command: |
            . venv/bin/activate
            python3 -m coverage run test.py
            python3 -m coverage report test.py
      - run: 
          name: Run Linter
          command: |
            . venv/bin/activate
            python3 -m pylint calculator.py
      - sonarcloud/scan
      - persist_to_workspace:
            root: ~/repo
            paths: .
  deploy:
    working_directory: ~/repo
    docker: 
      - image: cimg/python:3.10.1
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Verify file
          command: |
            ls
            pwd
      - run:
          name: Generate Artifact
          command: |
            . venv/bin/activate
            python -m build --wheel
      - store_artifacts:
          path: ~/repo/dist
          destination: dist
      - run:
          name: Print env variables
          command: |
            #PYPI_USERNAME
            $PYPI_USERNAME
            echo $PYPI_USERNAME
            ${PYPI_USERNAME}
      #- run:
      #    name: Register Artifact
      #    command: |
      #      . venv/bin/activate
      #      python -m twine upload --username $PYPI_USERNAME --password $PYPI_PASSWORD dist/*.whl

workflows:
  build-deploy:
    jobs:
      - build:
          context: sonarcloud
      - deploy:
          context: sonarCloud
          filters:
            branches:
              only:
                - main
          requires:
            - build